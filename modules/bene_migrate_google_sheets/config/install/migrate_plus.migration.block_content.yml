id: block_content
label: Content blocks from Google Spreadsheet
dependencies:
  enforced:
    module:
      - bene_media
      - bene_migrate_google_sheets
migration_group: bene
source:
  plugin: url
  data_fetcher_plugin: http
  data_parser_plugin: google_sheets
  item_selector: ''
  # The feed file for the spreadsheet. The Google Spreadsheet should be either “Public” or set to “Anyone with link can
  # view” in order for the feed to work. Note that the <SHEET> param is the order of the tabs and WILL change if the
  # tabs are re-ordered.
  # Template: 'https://spreadsheets.google.com/feeds/list/<KEY>/<SHEET>/public/values?alt=json'
  urls: 'https://spreadsheets.google.com/feeds/list/1BkC1_65t5D4ZoDhTb0F0wlngPYBcZgwin7v45UYydFc/8/public/values?alt=json'
  # Under 'fields', we list the data items to be imported. The first level keys
  # are the source field names we want to populate (the names to be used as
  # sources in the process configuration below). For each field we're importing,
  # we provide a label (optional - this is for display in migration tools) and
  # an selector (xpath) for retrieving that value. It's important to note that this xpath
  # is relative to the elements retrieved by item_selector.
  #item_selector: /response/variety
  # For Google Spreadsheet XML feeds the actual columns are named with gsx: followed by the cleaned column name (lower,
  # limited punctuation, etc).
  fields:
    -
      name: id
      label: 'ID'
      selector: 'id'
    -
      name: description
      label: 'Description'
      selector: 'description'
    -
      name: title
      label: 'Title'
      selector: 'title'
    -
      name: lead
      label: 'Lead'
      selector: 'lead'
    -
      name: linkuri
      label: 'Link URI'
      selector: 'linkuri'
    -
      name: linktitle
      label: 'Link Title'
      selector: 'linktitle'
    -
      name: media
      label: 'Media'
      selector: 'media'
  # Under 'ids', we identify source fields populated above which will uniquely
  # identify each imported item. The 'type' makes sure the migration map table
  # uses the proper schema type for stored the IDs.
  ids:
    id:
      type: integer
# This is the mapping of the source values to the destination.
process:
  type:
    plugin: default_value
    default_value: bene_background_image_hero
  # Note that the source field names here (id and title) were
  # defined by the 'fields' configuration for the source plugin above.
  info: description
  bene_title: title
  bene_lead: lead
  bene_link/uri:
    plugin: link_url_import
    source: linkuri
  bene_link/title: linktitle
  bene_background_image_hero:
    plugin: migration
    source: media
    migration: media
destination:
  plugin: entity:block_content
migration_dependencies:
  required:
    - media
